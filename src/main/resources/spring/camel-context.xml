<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <!--
            A route that creates periodically random Persons and send them to the kie server.
            Objects are wrapped in a batch command that includes also a query to get a Greeting from the kie server.
            The Greeting is printed to the log.
         -->
        <route id="test-route" trace="false">
            <description>Example route that will regularly create a Person and send it to the Kie Server to get a greeting</description>
            <!-- Using the route defined below to send commands to the kie server and get the responses -->
            <from id="route-timer" uri="timer:testRoute?period=10s"/>
            <bean id="route-new-command" method="createRandomCommand" ref="decisionServerHelper"/>
            <to id="route-to-decision-server-rest" uri="direct:decisionserver"/>
            <bean id="route-extract-result" method="extractResult" ref="decisionServerHelper"/>
            <log id="route-log-result" message="${body.salutation}"/>
        </route>
        <!--
            The following route is used as sub-route to send generic commands to the kie server.
        -->
        <route id="decision-server-rest" trace="false">
            <!-- Using the xstream marshalling -->
            <from id="route-from-decision-server-rest" uri="direct:decisionserver"/>
            <setHeader headerName="CamelHttpMethod" id="header-post">
                <constant>POST</constant>
            </setHeader>
            <!-- Using the xstream marshalling -->
            <setHeader headerName="Content-Type" id="route-header-content-type">
                <constant>application/xml</constant>
            </setHeader>
            <setHeader headerName="X-KIE-ContentType" id="route-header-kie-content-type">
                <constant>xstream</constant>
            </setHeader>
            <marshal id="route-marshal">
                <xstream/>
            </marshal>
            <log id="route-log-request" message="${body}"/>
            <to id="to-http-rest" uri="http://{{service:{{kieserver.service}}:{{kieserver.devel-service}}}}/{{kieserver.path}}?authMethod=Basic&amp;authUsername={{kieserver.username}}&amp;authPassword={{kieserver.password}}"/>
            <!-- Unmarshal the response -->
            <unmarshal id="route-unmarshal">
                <xstream/>
            </unmarshal>
        </route>
    </camelContext>
</beans>
